// <auto-generated />
using System;
using HospitalManagement.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HospitalManagement.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240321103812_add-default-created-and-modified-date")]
    partial class adddefaultcreatedandmodifieddate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DepartmentJob", b =>
                {
                    b.Property<Guid>("DepartmentsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uuid");

                    b.HasKey("DepartmentsId", "JobId");

                    b.HasIndex("JobId");

                    b.ToTable("DepartmentJob");
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0169dd27-a25a-46d7-91c5-5c24e0a5fd54"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6873),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6876),
                            IsDeleted = false,
                            Name = "EMERGENCY DEPARTMENT"
                        },
                        new
                        {
                            Id = new Guid("6bfb6b7e-2091-4a82-a7a9-f14df1a92450"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6892),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6892),
                            IsDeleted = false,
                            Name = "MEDICAL/SURGICAL UNIT"
                        },
                        new
                        {
                            Id = new Guid("9bfc8c5c-5906-4a44-96ae-71f17e22e7e1"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6895),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6895),
                            IsDeleted = false,
                            Name = "INTENSIVE CARE UNIT"
                        },
                        new
                        {
                            Id = new Guid("b60d76e9-5cc5-44e7-9336-18e45494ff26"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6896),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6896),
                            IsDeleted = false,
                            Name = "LABORATORY"
                        },
                        new
                        {
                            Id = new Guid("5a128d7e-c137-47b1-bd49-2e9733d694ad"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6897),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6898),
                            IsDeleted = false,
                            Name = "RADIOLOGY"
                        },
                        new
                        {
                            Id = new Guid("1aae1f9e-3a45-4ee6-8b3d-f86b2b73b3f9"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6900),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6901),
                            IsDeleted = false,
                            Name = "PHARMACY"
                        },
                        new
                        {
                            Id = new Guid("7b7f70f0-414c-4b25-8602-3e005aeb5869"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6902),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6902),
                            IsDeleted = false,
                            Name = "OPERATING ROOMS"
                        },
                        new
                        {
                            Id = new Guid("a15b0843-2c4d-4bcb-bc88-028e14e6cb69"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6903),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6903),
                            IsDeleted = false,
                            Name = "MATERNITY/WOMEN'S HEALTH"
                        },
                        new
                        {
                            Id = new Guid("02b204b2-ee02-4a25-b087-d21e7cb9abf3"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6905),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6905),
                            IsDeleted = false,
                            Name = "PEDIATRICS"
                        },
                        new
                        {
                            Id = new Guid("fbd52b17-d1b5-44f2-bdc0-af2d749150bf"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6906),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6906),
                            IsDeleted = false,
                            Name = "PSYCHIATRY/PSYCHOLOGY"
                        },
                        new
                        {
                            Id = new Guid("dc06a832-8d7c-42b6-a5c8-177c15dc52ff"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6907),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6908),
                            IsDeleted = false,
                            Name = "PHYSICAL THERAPY/REHABILITATION"
                        },
                        new
                        {
                            Id = new Guid("bf92ad4f-ebae-4e1f-97e4-9f61adba017b"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6909),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6909),
                            IsDeleted = false,
                            Name = "NUTRITION SERVICES"
                        },
                        new
                        {
                            Id = new Guid("2b23f10a-9319-4862-856f-6fca2c64a5f3"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6910),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6910),
                            IsDeleted = false,
                            Name = "RESPIRATORY THERAPY"
                        },
                        new
                        {
                            Id = new Guid("f9a0b47f-8c2c-43dc-9e19-7d963f7f7d43"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6912),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6912),
                            IsDeleted = false,
                            Name = "SOCIAL SERVICES"
                        },
                        new
                        {
                            Id = new Guid("d5f66dc4-dfad-4be0-90a3-251a97ad9462"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6913),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(6913),
                            IsDeleted = false,
                            Name = "ADMINISTRATION/MANAGEMENT"
                        });
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5f10c02a-fa84-4936-837d-afa77e5bb238"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(7234),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(7234),
                            IsDeleted = false,
                            Name = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("607fbfc9-b509-48b9-acd0-dcfdcda51daa"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(7237),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(7238),
                            IsDeleted = false,
                            Name = "SUPERADMIN"
                        },
                        new
                        {
                            Id = new Guid("409dfa54-8822-41fc-8f93-f2a31378e436"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(7239),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(7239),
                            IsDeleted = false,
                            Name = "STAFF"
                        },
                        new
                        {
                            Id = new Guid("0169dd27-a25a-46d7-91c5-5c24e0a5fd54"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(7240),
                            DateModified = new DateTime(2024, 3, 21, 10, 38, 11, 696, DateTimeKind.Utc).AddTicks(7241),
                            IsDeleted = false,
                            Name = "PATIENT"
                        });
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("DepartmentJob", b =>
                {
                    b.HasOne("HospitalManagement.Domain.Entities.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalManagement.Domain.Entities.Job", null)
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Role", b =>
                {
                    b.HasOne("HospitalManagement.Domain.Entities.AppUser", null)
                        .WithMany("Roles")
                        .HasForeignKey("AppUserId");
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Staff", b =>
                {
                    b.HasOne("HospitalManagement.Domain.Entities.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalManagement.Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
