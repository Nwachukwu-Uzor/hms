// <auto-generated />
using System;
using HospitalManagement.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HospitalManagement.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240406152504_AddStaffIdToDoctorEntity")]
    partial class AddStaffIdToDoctorEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AppUserRole", b =>
                {
                    b.Property<Guid>("RolesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uuid");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("AppUserRole");
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("AppointmentTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0169dd27-a25a-46d7-91c5-5c24e0a5fd54"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1274),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1277),
                            IsDeleted = false,
                            Name = "EMERGENCY DEPARTMENT"
                        },
                        new
                        {
                            Id = new Guid("6bfb6b7e-2091-4a82-a7a9-f14df1a92450"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1298),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1298),
                            IsDeleted = false,
                            Name = "MEDICAL/SURGICAL UNIT"
                        },
                        new
                        {
                            Id = new Guid("9bfc8c5c-5906-4a44-96ae-71f17e22e7e1"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1301),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1302),
                            IsDeleted = false,
                            Name = "INTENSIVE CARE UNIT"
                        },
                        new
                        {
                            Id = new Guid("b60d76e9-5cc5-44e7-9336-18e45494ff26"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1303),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1303),
                            IsDeleted = false,
                            Name = "LABORATORY"
                        },
                        new
                        {
                            Id = new Guid("5a128d7e-c137-47b1-bd49-2e9733d694ad"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1305),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1305),
                            IsDeleted = false,
                            Name = "RADIOLOGY"
                        },
                        new
                        {
                            Id = new Guid("1aae1f9e-3a45-4ee6-8b3d-f86b2b73b3f9"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1308),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1309),
                            IsDeleted = false,
                            Name = "PHARMACY"
                        },
                        new
                        {
                            Id = new Guid("7b7f70f0-414c-4b25-8602-3e005aeb5869"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1311),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1312),
                            IsDeleted = false,
                            Name = "OPERATING ROOMS"
                        },
                        new
                        {
                            Id = new Guid("a15b0843-2c4d-4bcb-bc88-028e14e6cb69"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1316),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1317),
                            IsDeleted = false,
                            Name = "MATERNITY/WOMEN'S HEALTH"
                        },
                        new
                        {
                            Id = new Guid("02b204b2-ee02-4a25-b087-d21e7cb9abf3"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1318),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1318),
                            IsDeleted = false,
                            Name = "PEDIATRICS"
                        },
                        new
                        {
                            Id = new Guid("fbd52b17-d1b5-44f2-bdc0-af2d749150bf"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1320),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1320),
                            IsDeleted = false,
                            Name = "PSYCHIATRY/PSYCHOLOGY"
                        },
                        new
                        {
                            Id = new Guid("dc06a832-8d7c-42b6-a5c8-177c15dc52ff"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1322),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1322),
                            IsDeleted = false,
                            Name = "PHYSICAL THERAPY/REHABILITATION"
                        },
                        new
                        {
                            Id = new Guid("bf92ad4f-ebae-4e1f-97e4-9f61adba017b"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1323),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1324),
                            IsDeleted = false,
                            Name = "NUTRITION SERVICES"
                        },
                        new
                        {
                            Id = new Guid("2b23f10a-9319-4862-856f-6fca2c64a5f3"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1325),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1325),
                            IsDeleted = false,
                            Name = "RESPIRATORY THERAPY"
                        },
                        new
                        {
                            Id = new Guid("f9a0b47f-8c2c-43dc-9e19-7d963f7f7d43"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1327),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1327),
                            IsDeleted = false,
                            Name = "SOCIAL SERVICES"
                        },
                        new
                        {
                            Id = new Guid("d5f66dc4-dfad-4be0-90a3-251a97ad9462"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1329),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1329),
                            IsDeleted = false,
                            Name = "ADMINISTRATION/MANAGEMENT"
                        });
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Doctor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<Guid>("StaffId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.DoctorJob", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uuid");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("DoctorJobs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e457d0d7-7f7d-4dd1-91b6-57ae307dc9bd"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1690),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1691),
                            IsDeleted = false,
                            JobId = new Guid("5a04295f-4886-4bc9-b15e-2aaf303e5fc3")
                        },
                        new
                        {
                            Id = new Guid("ed88073f-6b2f-41ee-8ac0-956ef67932c8"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1695),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1696),
                            IsDeleted = false,
                            JobId = new Guid("ab14514d-67a2-4d8f-bc38-145c7eb665d8")
                        },
                        new
                        {
                            Id = new Guid("868edd64-161b-40e3-8ca2-38426fcdb05c"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1698),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1698),
                            IsDeleted = false,
                            JobId = new Guid("9795f052-3023-40b0-9ba4-4e1d1b7f3a23")
                        },
                        new
                        {
                            Id = new Guid("f71b6604-e5ff-4454-b666-565e833b8f2d"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1700),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1701),
                            IsDeleted = false,
                            JobId = new Guid("8e0d7ed5-15b7-4c63-8694-7e2f6e1614d5")
                        },
                        new
                        {
                            Id = new Guid("680521fa-d14a-48be-b36c-76b0f4f7eb2b"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1703),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1703),
                            IsDeleted = false,
                            JobId = new Guid("8f6ddc41-3b65-42b1-85f2-9a9de16e8394")
                        },
                        new
                        {
                            Id = new Guid("a8d434fd-355d-42c0-9c16-3621a7bc2085"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1705),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1705),
                            IsDeleted = false,
                            JobId = new Guid("c6c6b083-9717-4384-bc8b-c6fcf8e56d61")
                        });
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5a04295f-4886-4bc9-b15e-2aaf303e5fc3"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1869),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1870),
                            DepartmentId = new Guid("0169dd27-a25a-46d7-91c5-5c24e0a5fd54"),
                            IsDeleted = false,
                            Title = "Physician"
                        },
                        new
                        {
                            Id = new Guid("1e5f2fc7-eb9e-45c7-93a2-4d017a7a6e7a"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1876),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1877),
                            DepartmentId = new Guid("0169dd27-a25a-46d7-91c5-5c24e0a5fd54"),
                            IsDeleted = false,
                            Title = "Registered Nurse"
                        },
                        new
                        {
                            Id = new Guid("ab14514d-67a2-4d8f-bc38-145c7eb665d8"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1880),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1880),
                            DepartmentId = new Guid("7b7f70f0-414c-4b25-8602-3e005aeb5869"),
                            IsDeleted = false,
                            Title = "Surgeon"
                        },
                        new
                        {
                            Id = new Guid("c6c6b083-9717-4384-bc8b-c6fcf8e56d61"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1883),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1883),
                            DepartmentId = new Guid("7b7f70f0-414c-4b25-8602-3e005aeb5869"),
                            IsDeleted = false,
                            Title = "Anesthesiologist"
                        },
                        new
                        {
                            Id = new Guid("5642065b-1d35-4c33-9f05-47fe23b74c4d"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1885),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1886),
                            DepartmentId = new Guid("5a128d7e-c137-47b1-bd49-2e9733d694ad"),
                            IsDeleted = false,
                            Title = "Radiologic Technologist"
                        },
                        new
                        {
                            Id = new Guid("9835fc30-d1a9-4f67-84a1-4930edf7f883"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1889),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1889),
                            DepartmentId = new Guid("1aae1f9e-3a45-4ee6-8b3d-f86b2b73b3f9"),
                            IsDeleted = false,
                            Title = "Pharmacist"
                        },
                        new
                        {
                            Id = new Guid("9795f052-3023-40b0-9ba4-4e1d1b7f3a23"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1892),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1892),
                            DepartmentId = new Guid("02b204b2-ee02-4a25-b087-d21e7cb9abf3"),
                            IsDeleted = false,
                            Title = "Pediatrician"
                        },
                        new
                        {
                            Id = new Guid("8e0d7ed5-15b7-4c63-8694-7e2f6e1614d5"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1894),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1894),
                            DepartmentId = new Guid("fbd52b17-d1b5-44f2-bdc0-af2d749150bf"),
                            IsDeleted = false,
                            Title = "Psychiatrist"
                        },
                        new
                        {
                            Id = new Guid("026fb0dc-af73-4ff9-99b1-d6226b1c4ed2"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1897),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1897),
                            DepartmentId = new Guid("dc06a832-8d7c-42b6-a5c8-177c15dc52ff"),
                            IsDeleted = false,
                            Title = "Physical Therapist"
                        },
                        new
                        {
                            Id = new Guid("1cb98f70-2c59-4962-aae1-d6e3f2f3e145"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1899),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1899),
                            DepartmentId = new Guid("bf92ad4f-ebae-4e1f-97e4-9f61adba017b"),
                            IsDeleted = false,
                            Title = "Nutritionist"
                        },
                        new
                        {
                            Id = new Guid("8f6ddc41-3b65-42b1-85f2-9a9de16e8394"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1902),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1902),
                            DepartmentId = new Guid("2b23f10a-9319-4862-856f-6fca2c64a5f3"),
                            IsDeleted = false,
                            Title = "Respiratory Therapist"
                        },
                        new
                        {
                            Id = new Guid("2385e258-05fb-4f06-9768-71a179a1df6d"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1904),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(1905),
                            DepartmentId = new Guid("f9a0b47f-8c2c-43dc-9e19-7d963f7f7d43"),
                            IsDeleted = false,
                            Title = "Social Worker"
                        });
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Genotype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("PatientID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.PatientRegisterationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpiresOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<int>("VerificationStatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PatientRegisterationRequests");
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5f10c02a-fa84-4936-837d-afa77e5bb238"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(2061),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(2062),
                            IsDeleted = false,
                            Name = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("607fbfc9-b509-48b9-acd0-dcfdcda51daa"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(2066),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(2067),
                            IsDeleted = false,
                            Name = "SUPERADMIN"
                        },
                        new
                        {
                            Id = new Guid("409dfa54-8822-41fc-8f93-f2a31378e436"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(2068),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(2069),
                            IsDeleted = false,
                            Name = "STAFF"
                        },
                        new
                        {
                            Id = new Guid("0169dd27-a25a-46d7-91c5-5c24e0a5fd54"),
                            CreatedBy = "ADMIN",
                            DateCreated = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(2071),
                            DateModified = new DateTime(2024, 4, 6, 15, 25, 3, 428, DateTimeKind.Utc).AddTicks(2072),
                            IsDeleted = false,
                            Name = "PATIENT"
                        });
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uuid");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StaffID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("JobId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("AppUserRole", b =>
                {
                    b.HasOne("HospitalManagement.Domain.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalManagement.Domain.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Appointment", b =>
                {
                    b.HasOne("HospitalManagement.Domain.Entities.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalManagement.Domain.Entities.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Doctor", b =>
                {
                    b.HasOne("HospitalManagement.Domain.Entities.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.DoctorJob", b =>
                {
                    b.HasOne("HospitalManagement.Domain.Entities.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Job", b =>
                {
                    b.HasOne("HospitalManagement.Domain.Entities.Department", "Department")
                        .WithMany("Job")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Patient", b =>
                {
                    b.HasOne("HospitalManagement.Domain.Entities.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Staff", b =>
                {
                    b.HasOne("HospitalManagement.Domain.Entities.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalManagement.Domain.Entities.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Department", b =>
                {
                    b.Navigation("Job");
                });

            modelBuilder.Entity("HospitalManagement.Domain.Entities.Doctor", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
